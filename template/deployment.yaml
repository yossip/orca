apiVersion: apps/v1
kind: Deployment
metadata:
  name: orca-devops
spec:
  selector:
    matchLabels:
      app: orca
  replicas: 1
  template:
    metadata:
      labels:
        app: orca
    spec:
      containers:
       - name: orca-pod
         image: 022786159174.dkr.ecr.us-east-2.amazonaws.com/orca:0.1.0
         readinessProbe:
          httpGet:
             path: /_healthz
             port: 5000
          initialDelaySeconds: 300
          periodSeconds: 30
         env:
         - name: DB_PASS
           valueFrom:
             secretKeyRef:
               name: psql-postgresql
               key: postgresql-password
         - name: DB_USER 
           value: postgres 
         - name: DB_HOST
           value: psql-postgresql.orca.svc.cluster.local
         ports:
         - containerPort: 5000
         imagePullPolicy: IfNotPresent
         resources:
            limits:
              cpu: 350m
              memory: 400Mi
            requests:
              cpu: 150m
              memory: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  name: orca-service
spec:
  ports:
  - port: 80
    targetPort: 5000
    name: http
  selector:
    app: orca

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: orca
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: orca
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50

--- 
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: "devops"
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: "orca"
          servicePort: 80
    host: "orca.example.com"